(= (first:first '((a b) c))
   'a)
(= (second:first:first '(((a b c) q) z))
   'b)
(= (1:first:first '(((a b c) q) z))
   'b)
(= (second:0:first '(((a b c) q) z))
   'b)
(= (second:first:0 '(((a b c) q) z))
   'b)
(let ((id (mac (x) x)))
  (= (second:id:first:0 '(((a b c) q) z))
     'b))
(let ((foo "foo"))
  (= (foo:first '(a b c))
     (error :value-error)))
(= (first: 10)
   (error :composition-error))
(= (first:: 10)
   (error :composition-error))
(= (first::len 10)
   (error :composition-error))
